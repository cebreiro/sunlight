#pragma once
/**********************************************************
*        AUTO GENERATED FILE BY sox_code_generator        *
*                  DO NOT EDIT THIS FILE                  *
**********************************************************/

#include "sl/data/sox/sox_table_interface.h"

namespace sunlight::sox
{
    struct WeaponMotionType
    {
        explicit WeaponMotionType(StreamReader<std::vector<char>::const_iterator>& reader);

        int32_t index = {};
        int32_t _default = {};
        float defaultSpeed = {};
        int32_t walk = {};
        float walkSpeed = {};
        int32_t run = {};
        float runSpeed = {};
        int32_t idle = {};
        float idleSpeed = {};
        int32_t disArm = {};
        float disArmSpeed = {};
        int32_t reArm = {};
        float reArmSpeed = {};
        int32_t reLoad = {};
        float reLoadSpeed = {};
        int32_t maxCombo = {};
        int32_t attackMotion1 = {};
        float attackMotion1Speed = {};
        int32_t attackMotion2 = {};
        float attackMotion2Speed = {};
        int32_t attackMotion3 = {};
        float attackMotion3Speed = {};
        int32_t attackMotion4 = {};
        float attackMotion4Speed = {};
        int32_t attackMotion5 = {};
        float attackMotion5Speed = {};
        int32_t attackMotion6 = {};
        float attackMotion6Speed = {};
        int32_t attackMotion7 = {};
        float attackMotion7Speed = {};
        int32_t attackMotion8 = {};
        float attackMotion8Speed = {};
        int32_t attackMotion9 = {};
        float attackMotion9Speed = {};
        int32_t attackMotion10 = {};
        float attackMotion10Speed = {};
        int32_t feedbackMotion1 = {};
        float feedbackMotion1Speed = {};
        int32_t feedbackMotion2 = {};
        float feedbackMotion2Speed = {};
        int32_t feedbackMotion3 = {};
        float feedbackMotion3Speed = {};
        int32_t feedbackMotion4 = {};
        float feedbackMotion4Speed = {};
        int32_t feedbackMotion5 = {};
        float feedbackMotion5Speed = {};
        int32_t feedbackMotion6 = {};
        float feedbackMotion6Speed = {};
        int32_t feedbackMotion7 = {};
        float feedbackMotion7Speed = {};
        int32_t feedbackMotion8 = {};
        float feedbackMotion8Speed = {};
        int32_t feedbackMotion9 = {};
        float feedbackMotion9Speed = {};
        int32_t feedbackMotion10 = {};
        float feedbackMotion10Speed = {};
    };

    class WeaponMotionTypeTable final : public ISoxTable, public std::enable_shared_from_this<WeaponMotionTypeTable>
    {
    public:
        void LoadFromFile(const std::filesystem::path& path) override;

        auto Find(int32_t index) const -> const WeaponMotionType*;
        auto Get() const -> const std::vector<WeaponMotionType>&;

    private:
        std::unordered_map<int32_t, WeaponMotionType*> _umap;
        std::vector<WeaponMotionType> _vector;

    };
}
