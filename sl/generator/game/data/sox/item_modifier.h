#pragma once
/**********************************************************
*        AUTO GENERATED FILE BY sox_code_generator        *
*                  DO NOT EDIT THIS FILE                  *
**********************************************************/

#include "sl/data/sox/sox_table_interface.h"

namespace sunlight::sox
{
    struct ItemModifier
    {
        explicit ItemModifier(StreamReader<std::vector<char>::const_iterator>& reader);

        int32_t index = {};
        std::string effect = {};
        std::string name = {};
        int32_t generate = {};
        int32_t group = {};
        int32_t level = {};
        int32_t sortRank = {};
        int32_t rarity = {};
        int32_t addedTo = {};
        int32_t noModification = {};
        int32_t mod1 = {};
        float mod1Min = {};
        float mod1Max = {};
        int32_t mod1Type = {};
        int32_t mod1ExprType = {};
        int32_t mod1RoundingDigit = {};
        int32_t mod2 = {};
        float mod2Min = {};
        float mod2Max = {};
        int32_t mod2Type = {};
        int32_t mod2ExprType = {};
        int32_t mod2RoundingDigit = {};
        int32_t mod3 = {};
        float mod3Min = {};
        float mod3Max = {};
        int32_t mod3Type = {};
        int32_t mod3ExprType = {};
        int32_t mod3RoundingDigit = {};
        int32_t noConstraint = {};
        int32_t constr1 = {};
        int32_t constr1Value = {};
        int32_t constr2 = {};
        int32_t constr2Value = {};
        int32_t constr3 = {};
        int32_t constr3Value = {};
        int32_t constr4 = {};
        int32_t constr4Value = {};
    };

    class ItemModifierTable final : public ISoxTable, public std::enable_shared_from_this<ItemModifierTable>
    {
    public:
        void LoadFromFile(const std::filesystem::path& path) override;

        auto Find(int32_t index) const -> const ItemModifier*;
        auto Get() const -> const std::vector<ItemModifier>&;

    private:
        std::unordered_map<int32_t, ItemModifier*> _umap;
        std::vector<ItemModifier> _vector;

    };
}
