#pragma once
/**********************************************************
*        AUTO GENERATED FILE BY sox_code_generator        *
*                  DO NOT EDIT THIS FILE                  *
**********************************************************/

#include "sl/data/sox/sox_table_interface.h"

namespace sunlight::sox
{
    struct SkillBasic
    {
        explicit SkillBasic(StreamReader<std::vector<char>::const_iterator>& reader);

        int32_t index = {};
        std::string name = {};
        int32_t routineId = {};
        int32_t abilityType = {};
        int32_t job1 = {};
        int32_t job2 = {};
        int32_t job3 = {};
        int32_t degree = {};
        int32_t maxLevel = {};
        int32_t delayId = {};
        int32_t canSubjob = {};
        int32_t levelQualification = {};
        int32_t ability1Qualification = {};
        int32_t ability1Level = {};
        int32_t ability2Qualification = {};
        int32_t ability2Level = {};
        int32_t passive = {};
        int32_t spConsumption = {};
        int32_t spConsumptionDelay = {};
        int32_t furyOnly = {};
        int32_t requireItem = {};
        int32_t requireItemCount = {};
        float motionSpeed = {};
        int32_t needWeapon = {};
        int32_t delayType = {};
        int32_t delayTime = {};
        int32_t useType = {};
        int32_t applyTargetType = {};
        int32_t applyDamageType = {};
        int32_t damageLength = {};
        int32_t damageLength2 = {};
        int32_t damageMaxcount = {};
        int32_t cancelable = {};
        int32_t useRange = {};
        int32_t addWeaponRange = {};
        int32_t applyCasting = {};
        int32_t castingDelay = {};
        int32_t applyCharging = {};
        int32_t chargingDelay = {};
        int32_t damageMotionType = {};
        int32_t effect1 = {};
        int32_t effect1Type = {};
        int32_t effect1Reserved1 = {};
        int32_t effect1Reserved2 = {};
        int32_t effect1Reserved3 = {};
        int32_t effect1Reserved4 = {};
        int32_t effect1Reserved5 = {};
        int32_t effect1Reserved6 = {};
        int32_t effect1Reserved7 = {};
        int32_t effect1Reserved8 = {};
        int32_t effect1Reserved9 = {};
        int32_t effect1Reserved10 = {};
        int32_t effect1Reserved11 = {};
        int32_t effect1Reserved12 = {};
        int32_t effect1HopType = {};
        int32_t effect1HopA = {};
        int32_t effect1HopB = {};
        int32_t effect2 = {};
        int32_t effect2Type = {};
        int32_t effect2Reserved1 = {};
        int32_t effect2Reserved2 = {};
        int32_t effect2Reserved3 = {};
        int32_t effect2Reserved4 = {};
        int32_t effect2Reserved5 = {};
        int32_t effect2Reserved6 = {};
        int32_t effect2Reserved7 = {};
        int32_t effect2Reserved8 = {};
        int32_t effect2Reserved9 = {};
        int32_t effect2Reserved10 = {};
        int32_t effect2Reserved11 = {};
        int32_t effect2Reserved12 = {};
        int32_t effect2HopType = {};
        int32_t effect2HopA = {};
        int32_t effect2HopB = {};
        int32_t effect3 = {};
        int32_t effect3Type = {};
        int32_t effect3Reserved1 = {};
        int32_t effect3Reserved2 = {};
        int32_t effect3Reserved3 = {};
        int32_t effect3Reserved4 = {};
        int32_t effect3Reserved5 = {};
        int32_t effect3Reserved6 = {};
        int32_t effect3Reserved7 = {};
        int32_t effect3Reserved8 = {};
        int32_t effect3Reserved9 = {};
        int32_t effect3Reserved10 = {};
        int32_t effect3Reserved11 = {};
        int32_t effect3Reserved12 = {};
        int32_t effect3HopType = {};
        int32_t effect3HopA = {};
        int32_t effect3HopB = {};
        int32_t effect4 = {};
        int32_t effect4Type = {};
        int32_t effect4Reserved1 = {};
        int32_t effect4Reserved2 = {};
        int32_t effect4Reserved3 = {};
        int32_t effect4Reserved4 = {};
        int32_t effect4Reserved5 = {};
        int32_t effect4Reserved6 = {};
        int32_t effect4Reserved7 = {};
        int32_t effect4Reserved8 = {};
        int32_t effect4Reserved9 = {};
        int32_t effect4Reserved10 = {};
        int32_t effect4Reserved11 = {};
        int32_t effect4Reserved12 = {};
        int32_t effect4HopType = {};
        int32_t effect4HopA = {};
        int32_t effect4HopB = {};
    };

    class SkillBasicTable final : public ISoxTable, public std::enable_shared_from_this<SkillBasicTable>
    {
    public:
        void LoadFromFile(const std::filesystem::path& path) override;

        auto Find(int32_t index) const -> const SkillBasic*;
        auto Get() const -> const std::vector<SkillBasic>&;

    private:
        std::unordered_map<int32_t, SkillBasic*> _umap;
        std::vector<SkillBasic> _vector;

    };
}
