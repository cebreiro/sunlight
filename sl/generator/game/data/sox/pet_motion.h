#pragma once
/**********************************************************
*        AUTO GENERATED FILE BY sox_code_generator        *
*                  DO NOT EDIT THIS FILE                  *
**********************************************************/

#include "sl/data/sox/sox_table_interface.h"

namespace sunlight::sox
{
    struct PetMotion
    {
        explicit PetMotion(StreamReader<std::vector<char>::const_iterator>& reader);

        int32_t index = {};
        std::string name = {};
        int32_t modelId = {};
        int32_t generateFrame = {};
        int32_t lovelyFrame = {};
        int32_t afflictFrame = {};
        int32_t eatFrame = {};
        int32_t eatTiming = {};
        int32_t hungryFrame = {};
        int32_t idle01Frame = {};
        int32_t idle02Frame = {};
        int32_t idle03Frame = {};
        int32_t idle04Frame = {};
        int32_t idle05Frame = {};
        int32_t attackFrame = {};
        int32_t attackTiming = {};
        int32_t pickupFrame = {};
        int32_t pickupTiming = {};
    };

    class PetMotionTable final : public ISoxTable, public std::enable_shared_from_this<PetMotionTable>
    {
    public:
        void LoadFromFile(const std::filesystem::path& path) override;

        auto Find(int32_t index) const -> const PetMotion*;
        auto Get() const -> const std::vector<PetMotion>&;

    private:
        std::unordered_map<int32_t, PetMotion*> _umap;
        std::vector<PetMotion> _vector;

    };
}
