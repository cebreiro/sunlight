#pragma once
/**********************************************************
*        AUTO GENERATED FILE BY sox_code_generator        *
*                  DO NOT EDIT THIS FILE                  *
**********************************************************/

#include "sl/data/sox/sox_table_interface.h"

namespace sunlight::sox
{
    struct ItemBaseAttack
    {
        explicit ItemBaseAttack(StreamReader<std::vector<char>::const_iterator>& reader);

        int32_t index = {};
        int32_t motionCategory = {};
        int32_t dexBased = {};
        int32_t minimumDamage = {};
        int32_t maximumDamage = {};
        int32_t attackDelay = {};
        int32_t divDamage = {};
        int32_t divDamageDelay = {};
        int32_t combo = {};
        int32_t attackRange = {};
        int32_t hitMaterial = {};
        int32_t hitFX1 = {};
        int32_t hitFX2 = {};
        int32_t hitFX3 = {};
        int32_t hitFX4 = {};
        int32_t hitFX5 = {};
        int32_t hitFX6 = {};
        int32_t hitFX7 = {};
        int32_t hitFX8 = {};
        int32_t hitFX9 = {};
        int32_t hitFX10 = {};
    };

    class ItemBaseAttackTable final : public ISoxTable, public std::enable_shared_from_this<ItemBaseAttackTable>
    {
    public:
        void LoadFromFile(const std::filesystem::path& path) override;

        auto Find(int32_t index) const -> const ItemBaseAttack*;
        auto Get() const -> const std::vector<ItemBaseAttack>&;

    private:
        std::unordered_map<int32_t, ItemBaseAttack*> _umap;
        std::vector<ItemBaseAttack> _vector;

    };
}
