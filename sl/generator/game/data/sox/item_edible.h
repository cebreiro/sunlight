#pragma once
/**********************************************************
*        AUTO GENERATED FILE BY sox_code_generator        *
*                  DO NOT EDIT THIS FILE                  *
**********************************************************/

#include "sl/data/sox/sox_table_interface.h"

namespace sunlight::sox
{
    struct ItemEdible
    {
        explicit ItemEdible(StreamReader<std::vector<char>::const_iterator>& reader);

        int32_t index = {};
        std::string name = {};
        int32_t generate = {};
        std::string explanation = {};
        int32_t invenWidth = {};
        int32_t invenHeight = {};
        int32_t maxOverlapCount = {};
        int32_t rarity = {};
        int32_t price = {};
        int32_t modelID = {};
        int32_t modelColor = {};
        int32_t dropSound = {};
        int32_t useQuickSlot = {};
        int32_t oneMoreItem = {};
        int32_t equipPos = {};
        int32_t eatClass = {};
        int32_t effect1 = {};
        int32_t effectDuration1 = {};
        int32_t effectValue1 = {};
        int32_t effectPercent1 = {};
        int32_t effectReservedA1 = {};
        int32_t effectReservedB1 = {};
        int32_t effect2 = {};
        int32_t effectDuration2 = {};
        int32_t effectValue2 = {};
        int32_t effectPercent2 = {};
        int32_t effectReservedA2 = {};
        int32_t effectReservedB2 = {};
        int32_t effect3 = {};
        int32_t effectDuration3 = {};
        int32_t effectValue3 = {};
        int32_t effectPercent3 = {};
        int32_t effectReservedA3 = {};
        int32_t effectReservedB3 = {};
        int32_t effect4 = {};
        int32_t effectDuration4 = {};
        int32_t effectValue4 = {};
        int32_t effectPercent4 = {};
        int32_t effectReservedA4 = {};
        int32_t effectReservedB4 = {};
        int32_t effectSound = {};
        int32_t ableToSell = {};
        int32_t ableToTrade = {};
        int32_t ableToDrop = {};
        int32_t ableToDestroy = {};
        int32_t ableToStorage = {};
        int32_t conID = {};
        int32_t conRangeTime = {};
        int32_t reservedParam1 = {};
        int32_t reservedParam2 = {};
        int32_t reservedParam3 = {};
        int32_t reservedParam4 = {};
        int32_t reservedParam5 = {};
        int32_t reservedParam6 = {};
        int32_t reservedParam7 = {};
    };

    class ItemEdibleTable final : public ISoxTable, public std::enable_shared_from_this<ItemEdibleTable>
    {
    public:
        void LoadFromFile(const std::filesystem::path& path) override;

        auto Find(int32_t index) const -> const ItemEdible*;
        auto Get() const -> const std::vector<ItemEdible>&;

    private:
        std::unordered_map<int32_t, ItemEdible*> _umap;
        std::vector<ItemEdible> _vector;

    };
}
